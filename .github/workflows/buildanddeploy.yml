name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Trigger only for version tags like v0.0.1, v1.0.0

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Install dependencies
        run: npm install

      # Run tests with Xvfb for Linux systems to emulate a display environment
      - name: Run tests on Linux with Xvfb
        if: runner.os == 'Linux'
        run: xvfb-run -a npm test

      # Run tests on macOS and Windows without Xvfb
      - name: Run tests
        if: runner.os != 'Linux'
        run: npm test

      - name: Lint
        run: npm run lint

      - name: Build the extension
        run: npm run vscode:prepublish

      - name: Package the extension
        run: npx @vscode/vsce package

      - name: Upload artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: extension-package
          path: "*.vsix"

      # Version verification step, only runs for tags and on Ubuntu environment
      - name: Verify CHANGELOG version
        if: success() && startsWith(github.ref, 'refs/tags/v') && matrix.os == 'ubuntu-latest'
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          CHANGELOG_VERSION=$(grep -m 1 -oE '## \[[0-9]+\.[0-9]+\.[0-9]+\]' CHANGELOG.md | sed 's/^## \[//' | sed 's/\]//')
          echo "package.json version: $PACKAGE_VERSION"
          echo "CHANGELOG.md version: $CHANGELOG_VERSION"
          if [ "$PACKAGE_VERSION" != "$CHANGELOG_VERSION" ]; then
            echo "Error: Version in CHANGELOG.md ($CHANGELOG_VERSION) does not match version in package.json ($PACKAGE_VERSION)"
            exit 1
          fi

      # Publish step, only runs if the version verification passed and on Ubuntu environment
      - name: Publish
        if: success() && startsWith(github.ref, 'refs/tags/v') && matrix.os == 'ubuntu-latest'
        run: npx @vscode/vsce publish -p ${{ secrets.VSCE_TOKEN }}
